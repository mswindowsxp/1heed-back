/*
 * This file is generated by jOOQ.
 */
package io.uetunited.oneheed.entity.public_.tables;


import io.uetunited.oneheed.entity.public_.Public;
import io.uetunited.oneheed.entity.public_.tables.records.ReportsRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reports extends TableImpl<ReportsRecord> {

    private static final long serialVersionUID = 45297016;

    /**
     * The reference instance of <code>public.reports</code>
     */
    public static final Reports REPORTS = new Reports();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportsRecord> getRecordType() {
        return ReportsRecord.class;
    }

    /**
     * The column <code>public.reports.id</code>.
     */
    public final TableField<ReportsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.reports.customer_id</code>.
     */
    public final TableField<ReportsRecord, String> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.reports.created_by</code>.
     */
    public final TableField<ReportsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.reports.created_at</code>.
     */
    public final TableField<ReportsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.reports.reason</code>.
     */
    public final TableField<ReportsRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.reports.phone</code>.
     */
    public final TableField<ReportsRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.reports.address</code>.
     */
    public final TableField<ReportsRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.reports.email</code>.
     */
    public final TableField<ReportsRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.reports</code> table reference
     */
    public Reports() {
        this(DSL.name("reports"), null);
    }

    /**
     * Create an aliased <code>public.reports</code> table reference
     */
    public Reports(String alias) {
        this(DSL.name(alias), REPORTS);
    }

    /**
     * Create an aliased <code>public.reports</code> table reference
     */
    public Reports(Name alias) {
        this(alias, REPORTS);
    }

    private Reports(Name alias, Table<ReportsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Reports(Name alias, Table<ReportsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Reports(Table<O> child, ForeignKey<O, ReportsRecord> key) {
        super(child, key, REPORTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reports as(String alias) {
        return new Reports(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reports as(Name alias) {
        return new Reports(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Reports rename(String name) {
        return new Reports(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Reports rename(Name name) {
        return new Reports(name, null);
    }
}
